{"version":3,"sources":["Components/Card/index.js","Components/Container/index.js","pages/home.js","Components/Form/index.js","pages/input.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","media","height","ImgMediaCard","database","handleSubmit","classes","Grid","item","xs","container","spacing","map","card","Card","className","CardMedia","component","alt","image","img","onClick","id","UIContainer","props","Fragment","CssBaseline","Container","children","Home","state","db","highScore","score","newDb","clicked","setState","console","log","sort","a","b","Math","random","this","Component","Button","handleFormSubmit","Textbox","textboxname","textboxvalue","handleInputChange","type","style","backgroundColor","name","value","onChange","Input","email","phone","event","target","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bc44e1ab.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport \"./style.css\";\n\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 175,\n    },\n    media: {\n        height: 200,\n    },\n});\n\nexport default function ImgMediaCard({ database, handleSubmit }) {\n    const classes = useStyles();\n\n    return (\n        <Grid item xs={12} container spacing={3}>\n\n            {\n                database.map(card => {\n \n                    return (\n                        <Grid item xs={3} spacing={3}>\n\n                            <Card className={classes.root} >\n\n                                <CardMedia className={classes.media}\n                                    component=\"img\"\n                                    alt={card.alt}\n                                    image={card.img} onClick={() => {\n                                        handleSubmit(card.id)\n                                    }\n\n                                    } />\n\n                            </Card>\n\n\n                        </Grid>\n                    )\n                })\n\n            }\n\n\n        </Grid>\n    );\n}\n\n\n\n\n{/* <Box\n                boxShadow={3}\n                style={{ width: '8rem', height: '5rem', backgroundColor: \"transparent\" }}\n            >\n                <Card className={classes.root} >\n                    <CardActionArea>\n                        <CardMedia\n                            component=\"img\"\n                            alt=\"Hermoine\"\n                            image=\"/assets/images/hermione.png\" height=\"200px\" />\n                    </CardActionArea>\n                </Card>\n            </Box>\n\n            <Box\n                boxShadow={3}\n                style={{ width: '8rem', height: '5rem', backgroundColor: \"transparent\" }}\n            >\n                <Card className={classes.root} >\n                    <CardActionArea>\n                        <CardMedia\n                            component=\"img\"\n                            alt=\"Ron\"\n                            image=\"/assets/images/ron.png\" height=\"200px\"/>\n                    </CardActionArea>\n                </Card>\n            </Box>\n\n            <Box\n                boxShadow={3}\n                style={{ width: '8rem', height: '5rem', backgroundColor: \"transparent\" }}\n            >\n                <Card className={classes.root} >\n                    <CardActionArea>\n                        <CardMedia\n                            component=\"img\"\n                            alt=\"Dumbledore\"\n                            image=\"/assets/images/dumbledore.png\" height=\"200px\" />\n                    </CardActionArea>\n                </Card>\n            </Box>\n        \n            <Box\n                boxShadow={3}\n                style={{ width: '8rem', height: '5rem', backgroundColor: \"transparent\" }}\n            >\n                <Card className={classes.root} >\n                    <CardActionArea>\n                        <CardMedia\n                            component=\"img\"\n                            alt=\"McGonagall\"\n                            image=\"/assets/images/mcgonagall.png\" height=\"200px\" />\n                    </CardActionArea>\n                </Card>\n            </Box>\n\n            <Box\n                boxShadow={3}\n                style={{ width: '8rem', height: '5rem', backgroundColor: \"transparent\" }}\n            >\n                <Card className={classes.root} >\n                    <CardActionArea>\n                        <CardMedia\n                            component=\"img\"\n                            alt=\"Hagrid\"\n                            image=\"/assets/images/hagrid.png\" height=\"200px\"/>\n                    </CardActionArea>\n                </Card>\n            </Box>\n\n            <Box\n                boxShadow={3}\n                style={{ width: '8rem', height: '5rem', backgroundColor: \"transparent\" }}\n            >\n                <Card className={classes.root} >\n                    <CardActionArea>\n                        <CardMedia\n                            component=\"img\"\n                            alt=\"Snape\"\n                            image=\"/assets/images/snape.png\" height=\"200px\" />\n                    </CardActionArea>\n                </Card>\n            </Box>\n\n            <Box\n                boxShadow={3}\n                style={{ width: '8rem', height: '5rem', backgroundColor: \"transparent\" }}\n            >\n                <Card className={classes.root} >\n                    <CardActionArea>\n                        <CardMedia\n                            component=\"img\"\n                            alt=\"Sirius\"\n                            image=\"/assets/images/sirius.png\" height=\"200px\" />\n                    </CardActionArea>\n                </Card>\n            </Box>\n\n            <Box\n                boxShadow={3}\n                style={{ width: '8rem', height: '5rem', backgroundColor: \"transparent\" }}\n            >\n                <Card className={classes.root} >\n                    <CardActionArea>\n                        <CardMedia\n                            component=\"img\"\n                            alt=\"Ginny\"\n                            image=\"/assets/images/ginny.png\" height=\"200px\" />\n                    </CardActionArea>\n                </Card>\n            </Box>\n\n            <Box\n                boxShadow={3}\n                style={{ width: '8rem', height: '5rem', backgroundColor: \"transparent\" }}\n            >\n                <Card className={classes.root} >\n                    <CardActionArea>\n                        <CardMedia\n                            component=\"img\"\n                            alt=\"Luna\"\n                            image=\"/assets/images/luna.png\" height=\"200px\" />\n                    </CardActionArea>\n                </Card>\n            </Box>\n\n            <Box\n                boxShadow={3}\n                style={{ width: '8rem', height: '5rem', backgroundColor: \"transparent\" }}\n            >\n                <Card className={classes.root} >\n                    <CardActionArea>\n                        <CardMedia\n                            component=\"img\"\n                            alt=\"Draco\"\n                            image=\"/assets/images/draco.png\" height=\"200px\" />\n                    </CardActionArea>\n                </Card>\n            </Box>\n\n            <Box\n                boxShadow={3}\n                style={{ width: '8rem', height: '5rem', backgroundColor: \"transparent\" }}\n            >\n                <Card className={classes.root} >\n                    <CardActionArea>\n                        <CardMedia\n                            component=\"img\"\n                            alt=\"Remus\"\n                            image=\"/assets/images/remus.png\" height=\"200px\"/>\n                    </CardActionArea>\n                </Card>\n            </Box>\n\n            <Box\n                boxShadow={3}\n                style={{ width: '8rem', height: '5rem', backgroundColor: \"transparent\" }}\n            >\n                <Card className={classes.root} >\n                    <CardActionArea>\n                        <CardMedia\n                            component=\"img\"\n                            alt=\"Neville\"\n                            image=\"/assets/images/neville.png\" height=\"200px\" />\n                    </CardActionArea>\n                </Card>\n            </Box>\n\n            <Box\n                boxShadow={3}\n                style={{ width: '8rem', height: '5rem', backgroundColor: \"transparent\" }}\n            >\n                <Card className={classes.root} >\n                    <CardActionArea>\n                        <CardMedia\n                            component=\"img\"\n                            alt=\"Bellatrix\"\n                            image=\"/assets/images/bellatrix.png\" height=\"200px\" />\n                    </CardActionArea>\n                </Card>\n            </Box>\n\n            <Box\n                boxShadow={3}\n                style={{ width: '8rem', height: '5rem', backgroundColor: \"transparent\" }}\n            >\n                <Card className={classes.root} >\n                    <CardActionArea>\n                        <CardMedia\n                            component=\"img\"\n                            alt=\"Myrtle\"\n                            image=\"/assets/images/myrtle.png\" height=\"200px\" />\n                    </CardActionArea>\n                </Card>\n            </Box>\n\n            <Box\n                boxShadow={3}\n                style={{ width: '8rem', height: '5rem', backgroundColor: \"transparent\" }}\n            >\n                <Card className={classes.root} >\n                    <CardActionArea>\n                        <CardMedia\n                            component=\"img\"\n                            alt=\"Trelawney\"\n                            image=\"/assets/images/trelawney.png\" height=\"200px\" />\n                    </CardActionArea>\n                </Card>\n            </Box>   */}","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nexport default function UIContainer(props) {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n          {props.children}\n      </Container>\n    </React.Fragment>\n  );\n}","import React, { Component } from \"react\"\n\nimport Card from \"../Components/Card\"\nimport CustomCard from \"../Components/CustomCard\"\nimport db from '../utils/db.json'\nimport UIContainer from '../Components/Container'\nclass Home extends Component {\n    state = {\n        db,\n        highScore: 0,\n        score: 0\n    }\n\n\n    handleSubmit = (id) => {\n\n\n       let newDb = []      \n\n\n        if (this.state.score === 0) {\n            newDb = this.state.db.map(card => {\n                card.clicked = false\n                return card\n            })\n            this.setState({ db: newDb })\n            console.log(\"db\", this.state.db)\n    \n        }\n       \n              // console.log(id)\n         newDb = this.state.db.map(card  => {\n\n            if (id === card.id) {\n\n                if (!card.clicked) {\n                    this.setState({\n                        score: this.state.score + 1\n                    })\n\n                    if (this.state.score >= this.state.highScore) {\n                        this.setState({\n                            highScore: this.state.highScore + 1\n                        })\n                    }\n                    card.clicked = true\n\n\n                }\n                else {\n                    this.setState({\n                        score: 0\n\n                    })\n                }\n\n\n            }\n\n\n            return card\n\n        })\n        \n        newDb.sort((a,b) => {\n              \n            return Math.random() - 0.5\n        })\n\n        console.log(\"newDb\", newDb)\n\n        this.setState({ db: newDb })\n        console.log(\"db\", this.state.db)\n\n\n\n    }\n    render() {\n        return (\n            <UIContainer>\n                <h1>Harry Potter Clicky Game <span>Score: {this.state.score}</span> <span>High Score: {this.state.highScore}</span></h1>  \n                {console.log(\"score\", this.state.score, \"high score \", this.state.highScore)}\n                <Card database={this.state.db} handleSubmit={this.handleSubmit} />\n                {/* <CustomCard /> */}\n            </UIContainer>\n        )\n    }\n\n\n}\n\nexport default Home","import React from \"react\"\n \nexport function Button ({handleFormSubmit}) {\n    return (\n        <>\n          <button onClick={handleFormSubmit}> submit </button>  \n        </>\n    )\n}\n// props={\n//   myname:this.state.myname\n// }\n export function Textbox ({textboxname, textboxvalue, handleInputChange}) {\n    return (\n        <div>\n            <input type=\"text\" style={{backgroundColor: \"cyan\"}} name={textboxname}  value={textboxvalue} \n            onChange={handleInputChange} />\n        </div>\n    )\n}\n","import React, {Component} from 'react';\n\nimport {Textbox, Button} from \"../../src/Components/Form\"\n\nimport Container from \"../../src/Components/Container\"\n// obj={\n//   Textbox ,\n//   Form\n// }\n//obj.Textbox, obj.Form\n\n//  obj={\n// name:\"phil\",\n\n// }\n// obj.name\nclass Input extends Component {\nstate = {\n  name: \"\",\n  email: \"\",\n  phone: \"\",\n\n}\n\nhandleInputChange = (event) => {\n\n      const {name, value} = event.target\n\n     this.setState({\n        [name]:value   //phone: \"n@\"\n     })\n\n}\n\n\nhandleFormSubmit = (event) => {\n\n      console.log(\"name:\" , this.state.name, \"email: \", this.state.email, \"phone: \", this.state.phone)\n\n}\n\n  render(){\n    return (\n     <Container>\n  \n      name:  <Textbox  textboxname=\"name\" textboxvalue={this.state.name} handleInputChange = {this.handleInputChange} />\n      email:  <Textbox textboxname=\"email\" textboxvalue={this.state.email} handleInputChange = {this.handleInputChange} />\n      phone:   <Textbox textboxname=\"phone\" textboxvalue={this.state.phone} handleInputChange = {this.handleInputChange} />\n      <Button handleFormSubmit = {this.handleFormSubmit}>Submit</Button>\n       \n     \n      \n     </Container>\n        \n  \n        )\n    }\n}\n\nexport default Input\n","import React from \"react\"\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\nimport \"./App.css\"\nimport Home from \"./pages/home\"\nimport Form from \"./pages/input\"\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path={[\"/\", \"/home\"]}>\n            <Home />\n\n        </Route>\n        <Route exact path=\"/form\">\n            <Form />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}